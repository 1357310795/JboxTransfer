name: Build and Upload Portable App Release

on:
  # release:
  #   types: [published]
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release_cli_portable:
    strategy:
      matrix:
        rid: [linux-arm64, linux-musl-arm64, linux-x64, linux-musl-x64, osx-x64, osx-arm64, win-x64, win-x86, win-arm64]
        build_configuration: [Release]
        deploy_mode: [with-runtime, no-runtime]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          ref: aspnet
      - name: Download frontend files
        uses: robinraju/release-downloader@v1
        with:
          repository: '1357310795/jboxtransfer-front'
          latest: true
          fileName: 'jboxtransfer-front-build.zip'
          out-file-path: '/tmp'

      - name: Extract frontend files
        run: |
          mkdir -p ./JboxTransfer.Server/wwwroot
          unzip /tmp/jboxtransfer-front-build.zip -d ./JboxTransfer.Server/wwwroot

      - name: Setup Dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0

      - name: Build ASP.NET Core App
        run: |
          if [ "${{ matrix.deploy_mode }}" == "with-runtime" ]; then
            dotnet publish -c ${{ matrix.build_configuration }} -r ${{ matrix.rid }} JboxTransfer.Server/JboxTransfer.Server.csproj --self-contained
          else
            dotnet publish -c ${{ matrix.build_configuration }} -r ${{ matrix.rid }} JboxTransfer.Server/JboxTransfer.Server.csproj
          fi

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: JboxTransfer.Server-${{ matrix.rid }}-${{ matrix.build_configuration }}-${{ matrix.deploy_mode }}
          path: JboxTransfer.Server/bin/${{ matrix.build_configuration }}/net8.0/${{ matrix.rid }}/publish/

      - name: Pack Release Asset
        run: |
          cd JboxTransfer.Server/bin/${{ matrix.build_configuration }}/net8.0/${{ matrix.rid }}/publish/
          zip -r /tmp/app-${{ matrix.rid }}-${{ matrix.build_configuration }}.zip .

      - name: Get the Latest Release Info
        id: latest_release_info
        uses: gregziegan/fetch-latest-release@v2.0.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Asset
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.latest_release_info.outputs.upload_url }}
          asset_path: /tmp/app-${{ matrix.rid }}-${{ matrix.build_configuration }}.zip
          asset_name: JboxTransfer.Server-${{ matrix.rid }}-${{ matrix.deploy_mode }}.zip
          asset_content_type: application/zip
